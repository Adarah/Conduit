<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mag.conduit.infrastructure.mybatis.mapper.ArticleMapper" >
    <sql id="findBy">
        select
        a.slug          as article_slug,
        a.title         as article_title,
        a.description   as article_description,
        a.body          as article_body,
        a.created_at    as article_created_at,
        a.updated_at    as article_updated_at,
        (SELECT COUNT(*)
         FROM user_article_favorite ua
         WHERE ua.article_id = a.id
        )               AS article_favorites_count,
        CASE
            WHEN #{currentUserId} IS NOT NULL THEN
                (SELECT EXISTS (
                    SELECT 1
                    FROM user_article_favorite ua
                    WHERE ua.user_id = #{currentUserId}
                          AND ua.article_id = a.id
                ))
            ELSE false
        END             as article_favorited,
        u.username      as user_username,
        u.bio           as user_bio,
        u.image         as user_image,
        CASE
            WHEN #{currentUserId} IS NOT NULL THEN
                (SELECT EXISTS (
                    SELECT 1
                    FROM user_follow uf
                    WHERE uf.user_id = #{currentUserId}
                          AND uf.target_id = u.id
                ))
            ELSE false
        END             as user_following,
<!--        t.id            as tag_id,-->
        t.title         as tag_title
        from article a
        join conduit_user u
        on a.author_id = u.id
        left join article_tag at
        on a.id = at.article_id
        left join tag t
        on at.tag_id = t.id
    </sql>

<!--    THIS SHOULD NEVER BE CALLED USING USER INPUT AS IT ALLOWS FOR SQL INJECTION DUE TO THE ${} NOTATION-->
    <select id="findByColumn" resultMap="ArticleMap">
            <include refid="findBy"></include>
            WHERE A.${columnName} = #{value}
    </select>

    <resultMap id="ArticleMap" type="com.mag.conduit.application.dto.ArticleData">
        <id property="slug" column="article_slug"/>
        <result property="title" column="article_title"/>
        <result property="description" column="article_description"/>
        <result property="body" column="article_body"/>
        <result property="createdAt" column="article_created_at"/>
        <result property="updatedAt" column="article_updated_at"/>
        <result property="favoritesCount" column="article_favorites_count"/>
        <association property="author" resultMap="ProfileMap"/>
<!--        <collection property="tagList"  ofType="com.mag.conduit.core.tag.Tag" >-->
<!--            <id property="id" column="tag_id"/>-->
<!--            <result property="title" column="tag_title"/>-->
<!--        </collection>-->
        <collection property="tagList" ofType="java.lang.String">
            <id property="id" column="tag_title"></id>
        </collection>
    </resultMap>

    <resultMap id="ProfileMap" type="com.mag.conduit.application.dto.ProfileData">
        <constructor>
            <idArg column="user_username" javaType="String"></idArg>
            <arg column="user_bio" javaType="String" ></arg>
            <arg column="user_image" javaType="String"></arg>
            <arg column="user_following" javaType="boolean" ></arg>
        </constructor>
    </resultMap>

    <select id="checkIfSlugExists" resultType="java.lang.Boolean">
        SELECT EXISTS(
            SELECT 1
            FROM article
            WHERE slug = #{slug}
        )
    </select>

    <select id="save" useCache="false" flushCache="true" resultType="java.util.UUID">
        INSERT INTO article (slug, title, description, body, author_id)
        VALUES (#{slug}, #{title}, #{description}, #{body}, #{authorId})
        RETURNING id
    </select>

</mapper>
